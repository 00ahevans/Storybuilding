[{"/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/index.js":"1","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/reportWebVitals.js":"2","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/App.js":"3","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/AuthPages/Login.js":"4","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/AuthPages/Signup.js":"5","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/PublicStoriesPage/PublicStoriesPage.js":"6","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/HomePage/HomePage.js":"7","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/firebase.js":"8","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/AuthPages/Settings.js":"9","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/ContextProvider.js":"10"},{"size":500,"mtime":1611524317204,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1611524317205,"results":"13","hashOfConfig":"12"},{"size":1083,"mtime":1611900839902,"results":"14","hashOfConfig":"12"},{"size":2571,"mtime":1611524317200,"results":"15","hashOfConfig":"12"},{"size":3359,"mtime":1611524317200,"results":"16","hashOfConfig":"12"},{"size":2140,"mtime":1611738440609,"results":"17","hashOfConfig":"12"},{"size":1100,"mtime":1611524317201,"results":"18","hashOfConfig":"12"},{"size":703,"mtime":1611524317203,"results":"19","hashOfConfig":"12"},{"size":3472,"mtime":1611903902515,"results":"20","hashOfConfig":"12"},{"size":686,"mtime":1611900102013,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"dv1mdz",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/index.js",[],["47","48"],"/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/reportWebVitals.js",[],"/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/App.js",["49"],"/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/AuthPages/Login.js",["50","51"],"import React from \"react\";\nimport { Form, Button, Alert, Container } from \"react-bootstrap\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport { app, auth } from '../firebase';\nimport \"./AuthStyles.css\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: \"\",\n      emailRef: \"\",\n      passwordRef: \"\"\n    }\n\n    this.loginUser = this.loginUser.bind(this);\n  }\n\n  loginUser(e) {\n    e.preventDefault()\n\n    auth.setPersistence(app.auth.Auth.Persistence.SESSION).then(() => {\n      return auth.signInWithEmailAndPassword(this.state.emailRef, this.state.passwordRef)\n    }).then(() => {console.log('User successfully signed in');\n                    window.location.replace('/public');})\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        this.setState({...this.state, error: `${errorCode}: ${errorMessage}`});\n      });\n  }\n\n  componentDidMount() {\n    if (auth.currentUser) {\n      window.location.replace('/public');\n    }\n  }\n\n  render() {\n\n    return(\n      <>\n        <Container className=\"d-flex align-items-center justify-content-center body\">\n          <div className=\"login align-items-center mt-5\">\n  \n              <h1 className=\"text-center mb-4 title\">\n                Log In\n              </h1>\n\n              {this.state.error && <Alert variant=\"danger\">{this.state.error}</Alert>\n              }\n\n              <Form className=\"form\" onSubmit={this.loginUser}>\n                <div id=\"email\">\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control type=\"email\" onChange={(event) => this.setState({...this.state, emailRef: event.target.value})} required />\n                </div>\n\n                <Form.Group id=\"password\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\" onChange={(event) => this.setState({...this.state, passwordRef: event.target.value})} required />\n                </Form.Group>\n\n                <Button className=\"w-100\" variant=\"secondary\" type=\"submit\">\n                  Log In\n                </Button>\n\n              </Form>\n\n              <div className=\"w-100 text-center mt-3\">\n                <Link to=\"/forgot-password\">Forgot Password?</Link>\n              </div>\n              \n              <div className=\"w-100 text-center\">\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\n              </div>\n\n          </div>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Login;\n\n","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/AuthPages/Signup.js",["52","53","54","55"],"import React, {useRef, useState} from \"react\"\nimport {Form, Button, Alert, Container} from \"react-bootstrap\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport {auth, app} from '../firebase';\nimport \"./AuthStyles.css\"\n\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: \"\",\n            passwordRef: \"\",\n            passwordCheckRef: \"\",\n            emailRef: \"\"\n        }\n\n        this.createAccount = this.createAccount.bind(this);\n    }\n\n    createAccount(e) {\n        e.preventDefault()\n        console.log(e);\n        if (this.state.passwordRef !== this.state.passwordCheckRef) {\n            return this.setState({...this.state, error: \"Passwords do not match.\"});\n          }\n        \n        auth.setPersistence(app.auth.Auth.Persistence.SESSION).then(() => {\n            return auth.createUserWithEmailAndPassword(this.state.emailRef, this.state.passwordRef);\n        }).then((userCredential) => {\n                // Signed in \n                var user = userCredential.user;\n                console.log(\"User account successfully created\");\n                window.location.replace(\"/public\");\n            })\n            .catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                this.setState({...this.state, error: `${errorCode}: ${errorMessage}`});\n            });\n    }\n\n    render() {\n        return(\n            <>        \n                <Container className=\"d-flex align-items-center justify-content-center\">\n                <div className=\"login align-items-center mt-5\">\n                    \n                    <h1 className=\"text-center mb-4 title\">Sign Up</h1> \n\n                    {this.state.error && <Alert variant=\"danger\">{this.state.error}</Alert>}\n\n                    <Form onSubmit={this.createAccount}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" onChange={(event) => this.setState({...this.state, emailRef: event.target.value})} required />\n                        </Form.Group>\n\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password (6+ characters)</Form.Label>\n                            <Form.Control type=\"password\" onChange={(event) => this.setState({...this.state, passwordRef: event.target.value})} required />\n                        </Form.Group>\n\n                        <Form.Group id=\"password-confirm\">\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control type=\"password\" onChange={(event) => this.setState({...this.state, passwordCheckRef: event.target.value})} required />\n                        </Form.Group>\n\n                        <Button className=\"w-100\" variant=\"secondary\" type=\"submit\">\n                            Sign Up\n                        </Button>\n\n                        <div className=\"w-100 text-center mt-2\">\n                            Already have an account? \n                            <Link to=\"/login\">Log In</Link>\n                        </div>\n                    </Form>   \n                </div>\n                \n            </Container>\n        </>\n        );\n    }\n}\n\nexport default SignUp;\n\n","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/PublicStoriesPage/PublicStoriesPage.js",["56","57"],"import React from 'react';\nimport {Redirect, Link} from 'react-router-dom';\nimport {database, auth} from '../firebase';\n\nclass PublicStoriesPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          publicGames: \"\",\n        };\n    }\n\n    componentDidMount() {\n      //Pull public games stored in database and pass to state \n        let gameArr = []\n        database.ref('/games/').once('value').then((snapshot) => {\n          let results = snapshot.val()\n          if (!results) {\n            //Snapshot is empty and there are no public games\n            return;\n          } else {\n            //\n            for (let i in results) {\n              let contentArr = results[i].content.substring(1, results[i].content.length - 1);\n              results[i].content = contentArr.split(\",\");\n              gameArr.unshift(results[i]);\n            }\n            this.setState({...this.state, publicGames: gameArr});\n          }\n        });\n    }\n\n  render() {\n    return (\n      <div>\n        \n        <section class=\"story-page\">\n          {this.state.publicGames ?\n            this.state.publicGames.map((game) => {\n              return (\n                <div class=\"new-story-1\">\n                  <form action=\".. fill it later ..\" method=\"get\">\n                    <h1> {game.content[0]} </h1>\n                  </form> <br />\n                  <button type=\"submit\"> Join game </button>\n                </div>\n              );\n            }) : <h1>No public games found</h1>}\n\n          <div class=\"new-story-2\">\n            <form action=\".. fill it later ..\" method=\"get\">\n              <h1> Caraousel </h1>\n            </form> <br />\n            <button type=\"submit\"> Join game </button>\n          </div>\n\n          <div class=\"new-story-3\">\n            <form action=\".. fill it later ..\" method=\"get\">\n              <h1> Caraousel </h1>\n\n            </form><br />\n            <button type=\"submit\"> Join game </button>\n          </div>\n        </section>\n        <Link to={\"/settings\"}>\n          Settings\n        </Link>\n\n      </div>\n    );\n  }\n}\n\nexport default PublicStoriesPage;","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/HomePage/HomePage.js",["58","59","60","61","62"],"import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport \"./home-page.css\";\nimport { Modal, Button, ButtonGroup, Link } from \"react-bootstrap\";\nimport {auth} from '../firebase';\n\n\nclass HomePage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div>  \n                <div className=\"title text-center mb-4\">\n                    <h1>Story Builder App</h1>\n                    <h2>Relax and play with friends at leisure</h2>\n                    <p> put some fancy explanation to it </p>\n                </div>\n                <div className=\"d-flex align-items-center justify-content-center\">\n                <ButtonGroup>\n                    <Button variant=\"secondary\" href = \"/login\">\n                        Log In\n                    </Button>\n\n                    <Button variant=\"secondary\" href = \"/signup\">\n                        Sign Up\n                    </Button>\n                </ButtonGroup>\n                </div>           \n            </div>\n        );\n    }\n}\n\nexport default HomePage;\n","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/firebase.js",[],"/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/AuthPages/Settings.js",["63","64"],"/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/ContextProvider.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":9,"column":8,"nodeType":"71","messageId":"72","endLine":9,"endColumn":23},{"ruleId":"69","severity":1,"message":"73","line":3,"column":16,"nodeType":"71","messageId":"72","endLine":3,"endColumn":24},{"ruleId":"69","severity":1,"message":"74","line":3,"column":26,"nodeType":"71","messageId":"72","endLine":3,"endColumn":36},{"ruleId":"69","severity":1,"message":"75","line":1,"column":16,"nodeType":"71","messageId":"72","endLine":1,"endColumn":22},{"ruleId":"69","severity":1,"message":"76","line":1,"column":24,"nodeType":"71","messageId":"72","endLine":1,"endColumn":32},{"ruleId":"69","severity":1,"message":"74","line":3,"column":16,"nodeType":"71","messageId":"72","endLine":3,"endColumn":26},{"ruleId":"69","severity":1,"message":"77","line":32,"column":21,"nodeType":"71","messageId":"72","endLine":32,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":2,"column":9,"nodeType":"71","messageId":"72","endLine":2,"endColumn":17},{"ruleId":"69","severity":1,"message":"78","line":3,"column":19,"nodeType":"71","messageId":"72","endLine":3,"endColumn":23},{"ruleId":"69","severity":1,"message":"73","line":2,"column":9,"nodeType":"71","messageId":"72","endLine":2,"endColumn":17},{"ruleId":"69","severity":1,"message":"79","line":4,"column":10,"nodeType":"71","messageId":"72","endLine":4,"endColumn":15},{"ruleId":"69","severity":1,"message":"80","line":4,"column":38,"nodeType":"71","messageId":"72","endLine":4,"endColumn":42},{"ruleId":"69","severity":1,"message":"78","line":5,"column":9,"nodeType":"71","messageId":"72","endLine":5,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":9,"column":5,"nodeType":"83","messageId":"84","endLine":11,"endColumn":6},{"ruleId":"69","severity":1,"message":"85","line":4,"column":10,"nodeType":"71","messageId":"72","endLine":4,"endColumn":13},{"ruleId":"69","severity":1,"message":"70","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":23},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'ContextProvider' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'user' is assigned a value but never used.","'auth' is defined but never used.","'Modal' is defined but never used.","'Link' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'app' is defined but never used.","no-global-assign","no-unsafe-negation"]