[{"/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/index.js":"1","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/reportWebVitals.js":"2","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/App.js":"3","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/firebase.js":"4","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/AuthPages/Settings.js":"5","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/HomePage/HomePage.js":"6","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/AuthPages/Login.js":"7","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/Dashboard/Dashboard.js":"8","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/PublicStoriesPage/PublicStoriesPage.js":"9","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/AuthPages/Signup.js":"10","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/AuthPages/ForgotPass.js":"11","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/HomePage/HomeNav.js":"12","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/PublicStoriesPage/PublicStoryCard.js":"13","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/RecentGamesPage/RecentGamesPage.js":"14","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/CreateNewGamePage/CreateNewGamePage.js":"15","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/GameCard/GameCard.js":"16","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/AuthPages/Signout.js":"17"},{"size":500,"mtime":1611524317204,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1611524317205,"results":"20","hashOfConfig":"19"},{"size":1843,"mtime":1612411488039,"results":"21","hashOfConfig":"19"},{"size":703,"mtime":1611524317203,"results":"22","hashOfConfig":"19"},{"size":3871,"mtime":1612598835456,"results":"23","hashOfConfig":"19"},{"size":6420,"mtime":1612411488427,"results":"24","hashOfConfig":"19"},{"size":2093,"mtime":1612411488416,"results":"25","hashOfConfig":"19"},{"size":8398,"mtime":1612603010158,"results":"26","hashOfConfig":"19"},{"size":1955,"mtime":1612411488856,"results":"27","hashOfConfig":"19"},{"size":4055,"mtime":1612411488417,"results":"28","hashOfConfig":"19"},{"size":1293,"mtime":1612411488416,"results":"29","hashOfConfig":"19"},{"size":397,"mtime":1612411488426,"results":"30","hashOfConfig":"19"},{"size":1369,"mtime":1612411488858,"results":"31","hashOfConfig":"19"},{"size":3307,"mtime":1612411488860,"results":"32","hashOfConfig":"19"},{"size":4033,"mtime":1612411488418,"results":"33","hashOfConfig":"19"},{"size":5117,"mtime":1612411488424,"results":"34","hashOfConfig":"19"},{"size":1348,"mtime":1612602953603,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"dv1mdz",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/index.js",[],["79","80"],"/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/reportWebVitals.js",[],"/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/App.js",[],"/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/firebase.js",[],"/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/AuthPages/Settings.js",["81"],"\nimport React from \"react\";\nimport { Container, Form, Button, Alert } from \"react-bootstrap\"\nimport { auth } from '../firebase';\n\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: auth.currentUser,\n            error: \"\",\n            newEmail: \"\",\n            password: \"\",\n            msg:\"\"\n        }\n        this.changeEmail = this.changeEmail.bind(this)\n        this.resetPassword = this.resetPassword.bind(this)\n    }\n\n    componentDidMount() {\n        //if (this.state.user == null){\n        // window.location.replace('/login');\n        //}\n    }\n\n    resetPassword(e) {\n        \n        e.preventDefault()\n        this.setState({...this.state, error: \"\"})\n        auth.sendPasswordResetEmail(auth.currentUser.email).then(() => {\n            this.setState({...this.state, msg: \"Check email for further instructions.\"})\n        })\n            .catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                this.setState({ ...this.state, error: `${errorCode}: ${errorMessage}` });\n            });\n\n    }\n\n    changeEmail(e) {\n        //reset previous error messages\n        \n        e.preventDefault()\n        \n        auth.signInWithEmailAndPassword(this.state.user.email, this.state.password)\n        if (this.state.user.email !== this.state.newEmail){\n        auth.currentUser.updateEmail(this.state.newEmail).then(() => {\n            console.log(this.state.newEmail)\n            console.log(auth.currentUser.email)\n            this.setState({...this.state, msg: \"Email set to \" + this.state.newEmail })\n            // Update successful.\n        }).catch((error) => {\n            // An error happened.\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            this.setState({ ...this.state, error: `${errorCode}: ${errorMessage}` });\n        });}\n        else{\n            this.setState({...this.state, msg: \"This email is already set to this account.\"})\n        }\n    }\n\n\n\n\n    render() {\n        return (\n            <>\n                <Container className=\"d-flex align-items-center justify-content-center body\">\n                    <div className=\"align-items-center mt-5\">\n                        <div>\n                            {this.state.error && <Alert variant=\"danger\">{this.state.error}</Alert>\n                            }\n                        </div>\n                        <div>\n                            {this.state.msg}\n                    </div>\n\n                        <Form className=\"form\" onSubmit={this.changeEmail}>\n\n                            <Form.Group>\n                                <Form.Label>New Email:  </Form.Label>\n                                <Form.Control type=\"newemail\" onChange={(event) => this.setState({ ...this.state, newEmail: event.target.value })} required />\n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Label>Re-enter Password: </Form.Label>\n                                <Form.Control type=\"password\" onChange={(event) => this.setState({ ...this.state, password: event.target.value })} />\n                            </Form.Group>\n\n\n                        <div className=\"bubble-button\">\n                                Change Email\n                        </div>\n\n\n                        </Form>\n\n                        <Form className=\"mt-5\">\n                            <Form.Label>Send Password Reset Email </Form.Label>\n                            <div className=\"bubble-button\" onClick={this.resetPassword}>\n                                Reset\n                        </div>\n                        </Form>\n\n                    </div>\n                </Container>\n            </>\n        );\n\n    }\n}\n\nexport default Settings;","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/HomePage/HomePage.js",["82","83","84","85","86"],"import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {auth} from '../firebase';\n//import \"./home-page.css\";\nimport VidBackground from './media/quilltly-background.mp4';\nimport Logo from './media/quill-n-ink-white.png';\nimport \"./home-page-concept.css\";\nimport { Modal, Button, ButtonGroup, Dropdown, DropdownButton, DropdownMenu, DropdownItem } from \"react-bootstrap\";\nimport Login from \"../AuthPages/Login.js\";\nimport Signup from \"../AuthPages/Signup\";\nimport ForgotPassword from '../AuthPages/ForgotPass';\nimport NavBar from \"./HomeNav\";\n\n\nclass HomePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.taglineLibrary = [\"Get Serious. Get Stories\", \"The Wonder Has A Name: Stories.\",\n            \"You're In Good Hands With Stories.\", \"Stories, Couldn't Ask For More.\",\n            \"Have You Had Your Stories Today?\", \"Stories Built To Perfection.\",\n            \"Stories - Now!\", \"Don't Live A Little, Live A Story.\",\n            \"Today's Stories, Since 1903.\", \"Great Stories. Great Times.\",\n            \"Let The Stories Begin.\", \"Pure Stories.\", \"Stories, Try It You'll Like It!\",\n            \"Get Your Daily Dose Of Stories.\", \"Stories For Me!\", \"You Wouldn't Want To Miss Stories.\",\n            \"Stories For Your Life.\", \"Say It With A Story.\", \"Stories. See More. Do More.\",\n            \"Stories New And Improved.\", \"Building A Better Tomorrow With Stories.\",\n            \"For the joy of stories.\", \"Stories, What Else?\", \"The More Stories The Better.\",\n            \"Red Hot Stories.\", \"The Future Of Stories.\", \"Stories Born And Bred.\",\n            \"Stories - A Safe Place In An Unsafe World!\", \"We Build Stories.\",\n            \"Have Stories Your Way.\", \"Stories: The Best Service Around.\",\n            \"The Stories of Champions.\", \"Stories, You Know You Want It.\", \"When The Going Gets Tough, the Tough Get Stories.\"\n        ];\n\n        this.state = {\n            modalOpen: false,\n            loginToggle: false,\n            signupToggle: false,\n        };\n\n        this.footerToggle = this.footerToggle.bind(this);\n    }\n\n    componentDidMount() {\n        let randomTaglineIndx = Math.floor(Math.random() * this.taglineLibrary.length);\n        let taglineElement = document.getElementById(\"tagline\");\n        if (taglineElement) {\n            taglineElement.innerHTML = this.taglineLibrary[randomTaglineIndx];\n        }\n\n        setTimeout(() => {\n            if (auth.currentUser) {window.location.replace(\"/dashboard\")}\n        }, 1000);\n    }\n\n    footerToggle() {\n\n    }\n\n    render() {\n        return(\n            <div>\n                <div>\n                    <video src={VidBackground} autoPlay muted loop />\n                    <div>\n                        <NavBar id=\"nav\" />\n                    </div>\n\n                    <div class=\"welcome-card\">\n                        <div class=\"tagline-div\">\n                            <div>\n                                <img id=\"logo\" src={Logo} alt=\"Quill\" />\n                                <h1>Quilltly</h1>\n                            </div>\n                            <h4 id=\"tagline\">{this.tagline}</h4>\n                        </div>\n\n                        <div class=\"button-div\">\n                            <Button className=\"bubble-button\" id=\"log-in-button\" variant=\"primary\"\n                                onClick={() => (this.setState({...this.state, modalOpen: true, loginToggle: true}))}>\n                                Log In\n                            </Button> <br />\n\n                            <Button className=\"bubble-button\" id=\"sign-up-button\" variant=\"primary\"\n                                onClick={() => (this.setState({...this.state, modalOpen: true, signupToggle: true}))}>\n                                Sign Up\n                            </Button>\n                        </div>\n                    </div>\n\n                    {this.state.modalOpen && <div className=\"blur-div\"></div>}\n\n                    <Modal className=\"modal\" show={this.state.modalOpen}>\n                        <Modal.Header>\n                            <Modal.Title className=\"modal-header\">\n                                {this.state.loginToggle && \"Log in\"}\n                                {this.state.signupToggle && \"Sign Up\"}\n                                {this.state.forgotPasswordToggle && \"Forgot Password\"}\n                            </Modal.Title>\n                            <button id=\"closeButton\" type=\"button\"\n                                onClick={() => (this.setState({...this.state, modalOpen: false, loginToggle: false, signupToggle: false, forgotPasswordToggle: false}))}>\n                                    X\n                            </button>\n                        </Modal.Header>\n\n                        <Modal.Body>\n                            {this.state.loginToggle && <Login />}\n                            {this.state.signupToggle && <Signup />}\n                            {this.state.forgotPasswordToggle && <ForgotPassword />}\n                        </Modal.Body>\n\n                        <Modal.Footer>\n                            {this.state.loginToggle &&\n                                <div>\n                                    <div>\n                                        <Link onClick={() => (this.setState({...this.state, signupToggle: false, loginToggle: false, forgotPasswordToggle: true}))}>\n                                            Forgot Password?\n                                        </Link>\n                                    </div>\n\n                                    <div>\n                                        Need an account? <Link onClick={() => (this.setState({...this.state, signupToggle: true, loginToggle: false}))}>\n                                            Sign Up\n                                        </Link>\n                                    </div>\n                                </div>}\n\n                            {this.state.signupToggle &&\n                                <div className=\"w-100 text-center mt-2\">\n                                    Already have an account? <Link onClick={() => (this.setState({...this.state, signupToggle: false, loginToggle: true}))}>Log In</Link>\n                                </div>}\n                        </Modal.Footer>\n                    </Modal>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;\n","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/AuthPages/Login.js",["87","88","89"],"import React from \"react\";\nimport { Form, Button, Alert, Container } from \"react-bootstrap\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport { app, auth } from '../firebase';\nimport \"./AuthStyles.css\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: \"\",\n      emailRef: \"\",\n      passwordRef: \"\"\n    }\n\n    this.loginUser = this.loginUser.bind(this);\n  }\n\n  loginUser(e) {\n    e.preventDefault()\n    //Set's authentication persistence to SESSION before authenticating user (should be changed to LOCAL before production)\n    auth.setPersistence(app.auth.Auth.Persistence.SESSION).then(() => {\n      return auth.signInWithEmailAndPassword(this.state.emailRef, this.state.passwordRef)\n    }).then(() => {console.log('User successfully signed in');})\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        this.setState({...this.state, error: `${errorCode}: ${errorMessage}`});\n      });\n  }\n\n  render() {\n    return(\n      <>\n      <Container>\n        <div className=\"login-wrapper\">\n\n          {this.state.error && <Alert variant=\"danger\">{this.state.error}</Alert>}\n\n          <Form className=\"auth-form\" onSubmit={this.loginUser}>\n            <Form.Group id=\"email\" className=\"form-group\">\n              <Form.Control type=\"email\" placeholder=\"Email\"  className=\"form-control\" \n                onChange={(event) => this.setState({...this.state, emailRef: event.target.value})} required />\n            </Form.Group>\n\n            <Form.Group id=\"password\" className=\"form-group\">\n              <Form.Control type=\"password\" placeholder=\"Password\" className=\"form-control\"\n                onChange={(event) => this.setState({...this.state, passwordRef: event.target.value})} required />\n            </Form.Group>\n\n            <Button className=\"bubble-button submit-button\" variant=\"secondary\" type=\"submit\">\n              Submit\n            </Button>\n\n          </Form>\n        </div>\n      </Container>\n      </>\n    );\n  }\n}\n\nexport default Login;\n\n","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/Dashboard/Dashboard.js",["90","91","92"],"/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/PublicStoriesPage/PublicStoriesPage.js",["93","94","95","96","97","98"],"import React from 'react';\nimport {Redirect, Link} from 'react-router-dom';\nimport {database, auth} from '../firebase';\nimport PublicStoryCard from './PublicStoryCard';\nimport GameCard from '../GameCard/GameCard';\n\nclass PublicStoriesPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          publicGames: []\n        };\n    }\n\n    componentDidMount() {\n        console.log(\"firebase call made\");\n        //Pull public games stored in database and pass to state\n          let gameArr = []\n          database.ref('/games/').once('value').then((snapshot) => {\n            let results = snapshot.val()\n            if (!results) {\n              //Snapshot is empty and there are no public games\n              return;\n            } else {\n              //Update state to hold games\n              for (let i in results) {\n                if (results[i].public) {\n                  this.setState({...this.state, publicGames: [...this.state.publicGames, {id: i, gameInfo: results[i]}]});\n                } else {continue;}\n                //Convert content string into list\n                /* let contentArr = results[i].content.substring(1, results[i].content.length - 1);\n                results[i].content = contentArr.split(\",\");\n                gameArr.unshift(results[i]); */\n              }\n              /* sessionStorage.setItem(\"pulledGames\", gameArr);\n              this.setState({...this.state, publicGames: gameArr}); */\n            }\n          });\n      }\n\n    render() {\n      //Returns public games from database\n        return(\n          <div>\n            <section class = \"story-page\">\n              {!this.state.publicGames.length == 0 ?\n                this.state.publicGames.map((game) => {\n                  return(<GameCard gameInfo={game}/>);\n                }) : <h1>No public games found</h1> }\n            </section>\n          </div>\n        );\n}\n}\n\nexport default PublicStoriesPage;\n","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/AuthPages/Signup.js",["99","100","101","102"],"import React, {useRef, useState} from \"react\"\nimport {Form, Button, Alert, Container} from \"react-bootstrap\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport {auth, app, database} from '../firebase';\nimport \"./AuthStyles.css\"\n\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: \"\",\n            usernameRef: \"\",\n            passwordRef: \"\",\n            passwordCheckRef: \"\",\n            emailRef: \"\"\n        }\n\n        this.createAccount = this.createAccount.bind(this);\n    }\n\n    createAccount(e) {\n        e.preventDefault()\n        //Checks if passwords match before displaying error\n        if (this.state.passwordRef !== this.state.passwordCheckRef) {\n            return this.setState({...this.state, error: \"Passwords do not match.\"});\n          }\n        \n        //Sets auth persistence for app to session (should be changed to LOCAL before production)\n        auth.setPersistence(app.auth.Auth.Persistence.SESSION).then(() => {\n            return auth.createUserWithEmailAndPassword(this.state.emailRef, this.state.passwordRef);\n        }).then((userCredential) => {\n                // Signed in \n                console.log(\"User account successfully created\");\n                //Creates database entry for new user\n                if (userCredential.additionalUserInfo.isNewUser) {\n                    var userID = userCredential.user.uid;\n                    console.log(userCredential);\n                    database.ref('users/' + userID).set({\n                        username: this.state.usernameRef,\n                        email: this.state.emailRef,\n                        startedGames: \"[]\"\n                    }).then(console.log(\"User entry established\"));\n                }\n            })\n            .catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                this.setState({...this.state, error: `${errorCode}: ${errorMessage}`});\n            });\n    }\n\n    render() {\n        return(\n            <>        \n                <Container>\n                <div className=\"login-wrapper\">\n\n                    {this.state.error && <Alert variant=\"danger\">{this.state.error}</Alert>}\n\n                    <Form className=\"auth-form\" onSubmit={this.createAccount}>\n                        <Form.Group id=\"username\" className=\"form-group\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control type=\"text\" pattern=\"[a-zA-Z0-9]+\"\n                                onChange={(event) => this.setState({...this.state, usernameRef: event.target.value})} required />\n                        </Form.Group>\n                        \n                        <Form.Group id=\"email\" className=\"form-group\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" onChange={(event) => this.setState({...this.state, emailRef: event.target.value})} required />\n                        </Form.Group>\n\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password (6+ characters)</Form.Label>\n                            <Form.Control type=\"password\" onChange={(event) => this.setState({...this.state, passwordRef: event.target.value})} required />\n                        </Form.Group>\n\n                        <Form.Group id=\"password-confirm\">\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control type=\"password\" onChange={(event) => this.setState({...this.state, passwordCheckRef: event.target.value})} required />\n                        </Form.Group>\n\n                        <Button className=\"bubble-button submit-button\" variant=\"secondary\" type=\"submit\">\n                            Create Account\n                        </Button>\n                    </Form>   \n                </div>\n                \n            </Container>\n        </>\n        );\n    }\n}\n\nexport default SignUp;\n\n","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/AuthPages/ForgotPass.js",[],"/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/HomePage/HomeNav.js",["103","104","105","106"],"import React from 'react';\n\nclass HomeNav extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <nav>\n            <a className=\"nav-link\" href=\"#\">About</a>\n            <a className=\"nav-link\" href=\"#\">FAQ</a>\n            <a className=\"nav-link\" href=\"#\">Developers</a>\n        </nav>\n        );\n    }\n}\n\nexport default HomeNav;","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/PublicStoriesPage/PublicStoryCard.js",[],"/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/RecentGamesPage/RecentGamesPage.js",["107","108","109","110"],"import React from 'react';\nimport { auth, database } from '../firebase';\nimport './dashboard-game-card.css';\nimport GameCard from '../GameCard/GameCard';\n\nclass RecentGamesPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: \"\",\n            profile: 0,\n            gameArr: []\n        }\n\n        this.toggleNav = this.toggleNav.bind(this);\n    }\n\n    componentDidMount() {\n        auth.onAuthStateChanged((user) => this.getUserGames(user));\n    }\n\n    toggleNav() {\n        document.getElementById(\"nav-bar\").style.visibility = \"hidden\";\n        console.log(\"click\");\n    }\n\n    getUserGames(user) {\n        database.ref('/users/' + auth.currentUser.uid).once('value').then((snapshot) => {\n            let results = snapshot.val();\n            if (!results) {\n            //Error fetching recent games\n            this.setState({...this.state, error: \"There was an error fetching your profile.\"});\n            return;\n            } else {\n            //Update state to hold user profile\n            this.setState({...this.state, profile: {name: results.name}})\n            //Update state to hold user's games\n            let userGameIDs = results.startedGames.split(\",\");\n            let newArr = []\n            if (userGameIDs.length == 0) {return;}\n            for (let i in userGameIDs) {\n                //Convert content string into list\n                let currID = userGameIDs[i];\n                if (i == 0) { //['01'\n                    newArr.push(currID.substring(2, currID.length - 1));\n                } else if (i == userGameIDs.length - 1) { //_'03']\n                    newArr.push(currID.substring(2, currID.length - 2));\n                } else { //_'02'\n                    newArr.push(currID.substring(2, currID.length - 1));\n                }       \n            }\n            this.setState({...this.state, profile: {...this.state.profile, startedGames: newArr}}); //startedGames list from user's profile\n\n            //Pull games\n            if (this.state.profile.startedGames.length !== 1) { //Making sure user has at least 1 started game\n                    database.ref('games/').once('value').then((snapshot) => {\n                        let results = snapshot.val();\n                        for (let i in results) {\n                            this.setState({...this.state, gameArr: [...this.state.gameArr, {id: i, gameInfo: results[i]}]});\n                        }\n                    }).catch((error) => (this.setState({...this.state, error: error})));\n                    console.log(this.state.gameArr);\n            }\n        }\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return(<div style={{marginTop: \"30px\"}}>\n                We're sorry, an error has occurred. Please try logging in again. <br/>\n                {this.state.error}\n                </div>);\n        }\n        else if (this.state.gameArr.length == 0) {\n            return(<div style={{marginTop: \"30px\"}}>You haven't made any games.</div>)\n        } else {\n        return(\n            <div>\n                {this.state.gameArr.map((game) => {\n                    return <GameCard gameInfo={game} />\n                })}\n            </div>\n        );\n                }\n    }\n}\n\nexport default RecentGamesPage;","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/CreateNewGamePage/CreateNewGamePage.js",["111","112","113"],"import React from 'react';\nimport './create-new-game-page.css';\nimport {auth, database} from '../firebase';\nimport {Dropdown, DropdownButton, Form, Button, ToggleButton} from 'react-bootstrap';\n\n\nconst randomString = require('randomstring');\n\nclass CreateNewGamePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: \"\",\n            storyIntro: \"\",\n            gameCode: \"\",\n            gamePublic: false\n        }\n\n        this.createGame = this.createGame.bind(this);\n    }\n\n    createGame() {\n        let timestamp = new Date();\n        let lengthOptions = document.getElementById(\"lengthOptions\");\n        let contentArr = this.state.storyIntro.split(\" \");\n        let contentStr = \"[\"\n        for (let i in contentArr) {\n            if (i == contentArr.length - 1) {\n                contentStr += `'${contentArr[i]}']`\n            } else { contentStr += `'${contentArr[i]}', ` }\n        }\n\n        database.ref('games/' + this.state.gameCode).set({\n            author: auth.currentUser.displayName,\n            title: this.state.title,\n            content: contentStr,\n            dateStarted: `${timestamp.getMonth()}/${timestamp.getDate()}/${timestamp.getFullYear()}`,\n            length: lengthOptions.options[lengthOptions.selectedIndex].text,\n            open: true,\n            public: this.state.gamePublic,\n            gameCode: this.state.gameCode\n        }).then(() => (alert((\"Game Created!\"))))\n        .catch((error) => (alert(error)));\n    }\n\n    componentDidMount() {\n        let generatedCode = randomString.generate({\n            length: 12,\n            charset: 'alphabetic'\n        });\n        this.setState({...this.state, gameCode: generatedCode});\n    }\n\n    render() {\n        console.log(auth.currentUser)\n        return(\n            <div className=\"create-game-card\">\n                <Form >\n                    <Form.Group id=\"storyTitle\">\n                        <Form.Control type=\"text\" placeholder=\"Title your masterpiece...\"\n                            onChange={(event) => this.setState({...this.state, title: event.target.value})} required />\n                    </Form.Group>\n                    <Form.Group id=\"storyIntro\">\n                        <Form.Control type=\"text\" placeholder=\"How do you want to start your story?\"\n                            onChange={(event) => this.setState({...this.state, storyIntro: event.target.value})} required />\n                    </Form.Group>\n                    <div style={{textAlign: \"center\"}}>\n                        <Form.Group id=\"radioButtons\">\n                            <ToggleButton checked={this.state.gamePublic} type=\"checkbox\" className=\"createGameOption\"\n                                onClick={() => this.setState({...this.state, gamePublic: !this.state.gamePublic})}>\n                                Public\n                            </ToggleButton>\n                            <Form.Label>Max Contribution Length: </Form.Label>\n                            <select id=\"lengthOptions\" className=\"createGameOption\">\n                                <option value=\"one-word\" selected>One Word</option> <br />\n                                <option value=\"one-sentence\" onClick={() => (console.log(\"one-sentence selected\"))}>One Sentence</option> <br />\n                                <option value=\"one-paragraph\">One Paragraph</option> <br />\n                                <option value=\"tweet-length\">Tweet Length</option> <br />\n                            </select>\n\n                            <Form.Label className=\"createGameOption\">Game Code: <span>{this.state.gameCode}</span></Form.Label>\n                        </Form.Group>\n                        <Button className=\"bubble-button submit-button\" variant=\"secondary\" type=\"submit\" onClick={this.createGame}>\n                            Submit\n                        </Button>\n                    </div>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default CreateNewGamePage;\n\n","/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/GameCard/GameCard.js",[],"/Users/adelaideevans/Documents/GitHub/Storybuilding/storybuilding/src/components/AuthPages/Signout.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":3,"column":27,"nodeType":"120","messageId":"121","endLine":3,"endColumn":33},{"ruleId":"118","severity":1,"message":"122","line":8,"column":25,"nodeType":"120","messageId":"121","endLine":8,"endColumn":36},{"ruleId":"118","severity":1,"message":"123","line":8,"column":38,"nodeType":"120","messageId":"121","endLine":8,"endColumn":46},{"ruleId":"118","severity":1,"message":"124","line":8,"column":48,"nodeType":"120","messageId":"121","endLine":8,"endColumn":62},{"ruleId":"118","severity":1,"message":"125","line":8,"column":64,"nodeType":"120","messageId":"121","endLine":8,"endColumn":76},{"ruleId":"118","severity":1,"message":"126","line":8,"column":78,"nodeType":"120","messageId":"121","endLine":8,"endColumn":90},{"ruleId":"118","severity":1,"message":"127","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":14},{"ruleId":"118","severity":1,"message":"128","line":3,"column":16,"nodeType":"120","messageId":"121","endLine":3,"endColumn":24},{"ruleId":"118","severity":1,"message":"129","line":3,"column":26,"nodeType":"120","messageId":"121","endLine":3,"endColumn":36},{"ruleId":"118","severity":1,"message":"130","line":9,"column":8,"nodeType":"120","messageId":"121","endLine":9,"endColumn":23},{"ruleId":"118","severity":1,"message":"119","line":13,"column":17,"nodeType":"120","messageId":"121","endLine":13,"endColumn":23},{"ruleId":"131","severity":1,"message":"132","line":37,"column":9,"nodeType":"133","messageId":"134","endLine":62,"endColumn":10},{"ruleId":"118","severity":1,"message":"128","line":2,"column":9,"nodeType":"120","messageId":"121","endLine":2,"endColumn":17},{"ruleId":"118","severity":1,"message":"127","line":2,"column":19,"nodeType":"120","messageId":"121","endLine":2,"endColumn":23},{"ruleId":"118","severity":1,"message":"135","line":3,"column":19,"nodeType":"120","messageId":"121","endLine":3,"endColumn":23},{"ruleId":"118","severity":1,"message":"130","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":23},{"ruleId":"118","severity":1,"message":"136","line":19,"column":15,"nodeType":"120","messageId":"121","endLine":19,"endColumn":22},{"ruleId":"137","severity":1,"message":"138","line":47,"column":47,"nodeType":"139","messageId":"140","endLine":47,"endColumn":49},{"ruleId":"118","severity":1,"message":"141","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":22},{"ruleId":"118","severity":1,"message":"142","line":1,"column":24,"nodeType":"120","messageId":"121","endLine":1,"endColumn":32},{"ruleId":"118","severity":1,"message":"127","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":14},{"ruleId":"118","severity":1,"message":"129","line":3,"column":16,"nodeType":"120","messageId":"121","endLine":3,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":4,"column":5,"nodeType":"145","messageId":"146","endLine":6,"endColumn":6},{"ruleId":"147","severity":1,"message":"148","line":11,"column":13,"nodeType":"149","endLine":11,"endColumn":46},{"ruleId":"147","severity":1,"message":"148","line":12,"column":13,"nodeType":"149","endLine":12,"endColumn":46},{"ruleId":"147","severity":1,"message":"148","line":13,"column":13,"nodeType":"149","endLine":13,"endColumn":46},{"ruleId":"137","severity":1,"message":"138","line":41,"column":36,"nodeType":"139","messageId":"140","endLine":41,"endColumn":38},{"ruleId":"137","severity":1,"message":"138","line":45,"column":23,"nodeType":"139","messageId":"140","endLine":45,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":47,"column":30,"nodeType":"139","messageId":"140","endLine":47,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":76,"column":44,"nodeType":"139","messageId":"140","endLine":76,"endColumn":46},{"ruleId":"118","severity":1,"message":"123","line":4,"column":9,"nodeType":"120","messageId":"121","endLine":4,"endColumn":17},{"ruleId":"118","severity":1,"message":"124","line":4,"column":19,"nodeType":"120","messageId":"121","endLine":4,"endColumn":33},{"ruleId":"137","severity":1,"message":"138","line":29,"column":19,"nodeType":"139","messageId":"140","endLine":29,"endColumn":21},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'ButtonGroup' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'PublicStoryCard' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'auth' is defined but never used.","'gameArr' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'useState' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]