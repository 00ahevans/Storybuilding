[{"C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\index.js":"1","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\App.js":"2","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\reportWebVitals.js":"3","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\HomePage\\HomePage.js":"4","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\AuthPages\\Signup.js":"5","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\AuthPages\\Login.js":"6","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\PublicStoriesPage\\PublicStoriesPage.js":"7","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\firebase.js":"8","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\PublicStoriesPage\\PublicStoryCard.js":"9","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\Dashboard\\Dashboard.js":"10","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\RecentGamesPage\\RecentGamesPage.js":"11","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\CreateNewGamePage\\CreateNewGamePage.js":"12","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\HomePage\\HomeNav.js":"13","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\GameCard\\GameCard.js":"14","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\AuthPages\\ForgotPass.js":"15","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\AuthPages\\Settings.js":"16","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\AddToStoryPage\\AddToStoryPage.js":"17","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\AuthPages\\Signout.js":"18"},{"size":517,"mtime":1611677549478,"results":"19","hashOfConfig":"20"},{"size":2042,"mtime":1612622139855,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1611677549479,"results":"22","hashOfConfig":"20"},{"size":6559,"mtime":1612330589912,"results":"23","hashOfConfig":"20"},{"size":3584,"mtime":1612546884486,"results":"24","hashOfConfig":"20"},{"size":2093,"mtime":1612302221868,"results":"25","hashOfConfig":"20"},{"size":1657,"mtime":1612565654781,"results":"26","hashOfConfig":"20"},{"size":724,"mtime":1611677550000,"results":"27","hashOfConfig":"20"},{"size":1410,"mtime":1611724304000,"results":"28","hashOfConfig":"20"},{"size":8569,"mtime":1612661002556,"results":"29","hashOfConfig":"20"},{"size":2033,"mtime":1612566727942,"results":"30","hashOfConfig":"20"},{"size":8376,"mtime":1612558148487,"results":"31","hashOfConfig":"20"},{"size":415,"mtime":1611959028000,"results":"32","hashOfConfig":"20"},{"size":7896,"mtime":1612626577149,"results":"33","hashOfConfig":"20"},{"size":1339,"mtime":1612330644106,"results":"34","hashOfConfig":"20"},{"size":3986,"mtime":1612661002532,"results":"35","hashOfConfig":"20"},{"size":1545,"mtime":1612632356956,"results":"36","hashOfConfig":"20"},{"size":1400,"mtime":1612661002541,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"dtkrac",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\index.js",[],["82","83"],"C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\App.js",[],"C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\reportWebVitals.js",[],"C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\HomePage\\HomePage.js",["84","85","86","87","88"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {auth} from '../firebase';\r\n//import \"./home-page.css\";\r\nimport VidBackground from './media/quilltly-background.mp4';\r\nimport Logo from './media/quill-n-ink-white.png';\r\nimport \"./home-page-concept.css\";\r\nimport { Modal, Button, ButtonGroup, Dropdown, DropdownButton, DropdownMenu, DropdownItem } from \"react-bootstrap\";\r\nimport Login from \"../AuthPages/Login.js\";\r\nimport Signup from \"../AuthPages/Signup\";\r\nimport ForgotPassword from '../AuthPages/ForgotPass';\r\nimport NavBar from \"./HomeNav\";\r\n\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.taglineLibrary = [\"Get Serious. Get Stories\", \"The Wonder Has A Name: Stories.\",\r\n            \"You're In Good Hands With Stories.\", \"Stories, Couldn't Ask For More.\",\r\n            \"Have You Had Your Stories Today?\", \"Stories Built To Perfection.\",\r\n            \"Stories - Now!\", \"Don't Live A Little, Live A Story.\",\r\n            \"Today's Stories, Since 1903.\", \"Great Stories. Great Times.\",\r\n            \"Let The Stories Begin.\", \"Pure Stories.\", \"Stories, Try It You'll Like It!\",\r\n            \"Get Your Daily Dose Of Stories.\", \"Stories For Me!\", \"You Wouldn't Want To Miss Stories.\",\r\n            \"Stories For Your Life.\", \"Say It With A Story.\", \"Stories. See More. Do More.\",\r\n            \"Stories New And Improved.\", \"Building A Better Tomorrow With Stories.\",\r\n            \"For the joy of stories.\", \"Stories, What Else?\", \"The More Stories The Better.\",\r\n            \"Red Hot Stories.\", \"The Future Of Stories.\", \"Stories Born And Bred.\",\r\n            \"Stories - A Safe Place In An Unsafe World!\", \"We Build Stories.\",\r\n            \"Have Stories Your Way.\", \"Stories: The Best Service Around.\",\r\n            \"The Stories of Champions.\", \"Stories, You Know You Want It.\", \"When The Going Gets Tough, the Tough Get Stories.\"\r\n        ];\r\n\r\n        this.state = {\r\n            modalOpen: false,\r\n            loginToggle: false,\r\n            signupToggle: false,\r\n        };\r\n\r\n        this.footerToggle = this.footerToggle.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let randomTaglineIndx = Math.floor(Math.random() * this.taglineLibrary.length);\r\n        let taglineElement = document.getElementById(\"tagline\");\r\n        if (taglineElement) {\r\n            taglineElement.innerHTML = this.taglineLibrary[randomTaglineIndx];\r\n        }\r\n\r\n        setTimeout(() => {\r\n            if (auth.currentUser) {window.location.replace(\"/dashboard\")}\r\n        }, 1000);\r\n    }\r\n\r\n    footerToggle() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <video src={VidBackground} autoPlay muted loop />\r\n                    <div>\r\n                        <NavBar id=\"nav\" />\r\n                    </div>\r\n\r\n                    <div class=\"welcome-card\">\r\n                        <div class=\"tagline-div\">\r\n                            <div>\r\n                                <img id=\"logo\" src={Logo} alt=\"Quill\" />\r\n                                <h1>Quilltly</h1>\r\n                            </div>\r\n                            <h4 id=\"tagline\">{this.tagline}</h4>\r\n                        </div>\r\n\r\n                        <div class=\"button-div\">\r\n                            <Button className=\"bubble-button\" id=\"log-in-button\" variant=\"primary\"\r\n                                onClick={() => (this.setState({...this.state, modalOpen: true, loginToggle: true}))}>\r\n                                Log In\r\n                            </Button> <br />\r\n\r\n                            <Button className=\"bubble-button\" id=\"sign-up-button\" variant=\"primary\"\r\n                                onClick={() => (this.setState({...this.state, modalOpen: true, signupToggle: true}))}>\r\n                                Sign Up\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {this.state.modalOpen && <div className=\"blur-div\"></div>}\r\n\r\n                    <Modal className=\"modal\" show={this.state.modalOpen}>\r\n                        <Modal.Header>\r\n                            <Modal.Title className=\"modal-header\">\r\n                                {this.state.loginToggle && \"Log in\"}\r\n                                {this.state.signupToggle && \"Sign Up\"}\r\n                                {this.state.forgotPasswordToggle && \"Forgot Password\"}\r\n                            </Modal.Title>\r\n                            <button id=\"closeButton\" type=\"button\"\r\n                                onClick={() => (this.setState({...this.state, modalOpen: false, loginToggle: false, signupToggle: false, forgotPasswordToggle: false}))}>\r\n                                    X\r\n                            </button>\r\n                        </Modal.Header>\r\n\r\n                        <Modal.Body>\r\n                            {this.state.loginToggle && <Login />}\r\n                            {this.state.signupToggle && <Signup />}\r\n                            {this.state.forgotPasswordToggle && <ForgotPassword />}\r\n                        </Modal.Body>\r\n\r\n                        <Modal.Footer>\r\n                            {this.state.loginToggle &&\r\n                                <div>\r\n                                    <div>\r\n                                        <Link onClick={() => (this.setState({...this.state, signupToggle: false, loginToggle: false, forgotPasswordToggle: true}))}>\r\n                                            Forgot Password?\r\n                                        </Link>\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        Need an account? <Link onClick={() => (this.setState({...this.state, signupToggle: true, loginToggle: false}))}>\r\n                                            Sign Up\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>}\r\n\r\n                            {this.state.signupToggle &&\r\n                                <div className=\"w-100 text-center mt-2\">\r\n                                    Already have an account? <Link onClick={() => (this.setState({...this.state, signupToggle: false, loginToggle: true}))}>Log In</Link>\r\n                                </div>}\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\AuthPages\\Signup.js",["89","90","91","92","93"],"import React, {useRef, useState} from \"react\"\nimport {Form, Button, Alert, Container} from \"react-bootstrap\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport {auth, app, database} from '../firebase';\nimport \"./AuthStyles.css\"\n\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: \"\",\n            usernameRef: \"\",\n            passwordRef: \"\",\n            passwordCheckRef: \"\",\n            emailRef: \"\"\n        }\n\n        this.createAccount = this.createAccount.bind(this);\n    }\n\n    createAccount(e) {\n        e.preventDefault()\n        //Checks if passwords match before displaying error\n        if (this.state.passwordRef !== this.state.passwordCheckRef) {\n            return this.setState({...this.state, error: \"Passwords do not match.\"});\n          }\n        \n        //Sets auth persistence for app to session (should be changed to LOCAL before production)\n        auth.setPersistence(app.auth.Auth.Persistence.SESSION).then(() => {\n            return auth.createUserWithEmailAndPassword(this.state.emailRef, this.state.passwordRef);\n        }).then((userCredential) => {\n                // Signed in \n                console.log(\"User account successfully created\");\n                //Creates database entry for new user\n            })\n            .catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                this.setState({...this.state, error: `${errorCode}: ${errorMessage}`});\n            });\n    }\n\n    render() {\n        return(\n            <>        \n                <Container>\n                <div className=\"login-wrapper\">\n\n                    {this.state.error && <Alert variant=\"danger\">{this.state.error}</Alert>}\n\n                    <Form className=\"auth-form\" onSubmit={this.createAccount}>\n                        <Form.Group id=\"username\" className=\"form-group\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control type=\"text\" pattern=\"[a-zA-Z0-9]+\"\n                                onChange={(event) => this.setState({...this.state, usernameRef: event.target.value})} required />\n                        </Form.Group>\n                        \n                        <Form.Group id=\"email\" className=\"form-group\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" onChange={(event) => this.setState({...this.state, emailRef: event.target.value})} required />\n                        </Form.Group>\n\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password (6+ characters)</Form.Label>\n                            <Form.Control type=\"password\" onChange={(event) => this.setState({...this.state, passwordRef: event.target.value})} required />\n                        </Form.Group>\n\n                        <Form.Group id=\"password-confirm\">\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control type=\"password\" onChange={(event) => this.setState({...this.state, passwordCheckRef: event.target.value})} required />\n                        </Form.Group>\n\n                        <Button className=\"bubble-button submit-button\" variant=\"secondary\" type=\"submit\">\n                            Create Account\n                        </Button>\n                    </Form>   \n                </div>\n                \n            </Container>\n        </>\n        );\n    }\n}\n\nexport default SignUp;\n\n","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\AuthPages\\Login.js",["94","95","96"],"import React from \"react\";\nimport { Form, Button, Alert, Container } from \"react-bootstrap\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport { app, auth } from '../firebase';\nimport \"./AuthStyles.css\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: \"\",\n      emailRef: \"\",\n      passwordRef: \"\"\n    }\n\n    this.loginUser = this.loginUser.bind(this);\n  }\n\n  loginUser(e) {\n    e.preventDefault()\n    //Set's authentication persistence to SESSION before authenticating user (should be changed to LOCAL before production)\n    auth.setPersistence(app.auth.Auth.Persistence.SESSION).then(() => {\n      return auth.signInWithEmailAndPassword(this.state.emailRef, this.state.passwordRef)\n    }).then(() => {console.log('User successfully signed in');})\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        this.setState({...this.state, error: `${errorCode}: ${errorMessage}`});\n      });\n  }\n\n  render() {\n    return(\n      <>\n      <Container>\n        <div className=\"login-wrapper\">\n\n          {this.state.error && <Alert variant=\"danger\">{this.state.error}</Alert>}\n\n          <Form className=\"auth-form\" onSubmit={this.loginUser}>\n            <Form.Group id=\"email\" className=\"form-group\">\n              <Form.Control type=\"email\" placeholder=\"Email\"  className=\"form-control\" \n                onChange={(event) => this.setState({...this.state, emailRef: event.target.value})} required />\n            </Form.Group>\n\n            <Form.Group id=\"password\" className=\"form-group\">\n              <Form.Control type=\"password\" placeholder=\"Password\" className=\"form-control\"\n                onChange={(event) => this.setState({...this.state, passwordRef: event.target.value})} required />\n            </Form.Group>\n\n            <Button className=\"bubble-button submit-button\" variant=\"secondary\" type=\"submit\">\n              Submit\n            </Button>\n\n          </Form>\n        </div>\n      </Container>\n      </>\n    );\n  }\n}\n\nexport default Login;\n\n","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\PublicStoriesPage\\PublicStoriesPage.js",["97","98","99","100"],"import React from 'react';\r\nimport {Redirect, Link} from 'react-router-dom';\r\nimport {database, auth} from '../firebase';\r\nimport PublicStoryCard from './PublicStoryCard';\r\nimport GameCard from '../GameCard/GameCard';\r\n\r\nclass PublicStoriesPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n          publicGames: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Pull public games stored in database and pass to state\r\n          database.ref('/games/').once('value').then((snapshot) => {\r\n            let results = snapshot.val()\r\n            if (!results) {\r\n              //Snapshot is empty and there are no public games\r\n              return;\r\n            } else {\r\n              //Update state to hold games\r\n              for (let i in results) {\r\n                if (results[i].public) {\r\n                  this.setState({...this.state, publicGames: [...this.state.publicGames, {id: i, gameInfo: results[i]}]});\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n\r\n      componentWillUnmount() {\r\n        sessionStorage.setItem(\"publicGames\", JSON.stringify(this.state.publicGames));\r\n      }\r\n\r\n    render() {\r\n      //Returns public games from database\r\n        return(\r\n          <div>\r\n            <section class = \"story-page\">\r\n              {this.state.publicGames.length > 0 ?\r\n                this.state.publicGames.map((game) => {\r\n                  return(<GameCard gameInfo={game}/>);\r\n                }) : <h1>No public games found</h1> }\r\n            </section>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PublicStoriesPage;\r\n","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\firebase.js",[],"C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\PublicStoriesPage\\PublicStoryCard.js",[],"C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\Dashboard\\Dashboard.js",["101","102","103"],"C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\RecentGamesPage\\RecentGamesPage.js",["104"],"import React from 'react';\r\nimport { auth, database } from '../firebase';\r\nimport './dashboard-game-card.css';\r\nimport GameCard from '../GameCard/GameCard';\r\n\r\nclass RecentGamesPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: \"\",\r\n            profile: 0,\r\n            gameArr: []\r\n        }\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        auth.onAuthStateChanged((user) => this.getUserGames(user));\r\n    }\r\n\r\n    toggleNav() {\r\n        document.getElementById(\"nav-bar\").style.visibility = \"hidden\";\r\n        console.log(\"click\");\r\n    }\r\n\r\n    getUserGames(user) {\r\n        database.ref('games/').once('value').then((snapshot) => {\r\n            let results = snapshot.val();\r\n            if (!results) {\r\n                this.setState({...this.state, error: \"There was an error fetching your games.\"});\r\n            } else {\r\n                for (let i in results) {\r\n                    if (results[i].author === auth.currentUser.uid) {\r\n                        //Game was created by current user, add to gameArr\r\n                        this.setState({...this.state, gameArr: [...this.state.gameArr, {id: i, gameInfo: results[i]}]});\r\n                    }\r\n                }   \r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return(<div style={{marginTop: \"30px\"}}>\r\n                We're sorry, an error has occurred. Please try logging in again. <br/>\r\n                {this.state.error}\r\n                </div>);\r\n        }\r\n        else if (this.state.gameArr.length == 0) {\r\n            return(<div style={{marginTop: \"30px\"}}>You haven't made any games.</div>)\r\n        } else {\r\n        return(\r\n            <div>\r\n                {this.state.gameArr.map((game) => {\r\n                    return <GameCard gameInfo={game} />\r\n                })}\r\n            </div>\r\n        );\r\n                }\r\n    }\r\n}\r\n\r\nexport default RecentGamesPage;","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\CreateNewGamePage\\CreateNewGamePage.js",["105","106","107","108","109","110","111","112"],"import React from 'react';\r\nimport './create-new-game-page.css';\r\nimport {auth, database} from '../firebase';\r\nimport {Dropdown, DropdownButton, Form, Button, ToggleButton, Alert} from 'react-bootstrap';\r\n\r\n\r\nconst randomString = require('randomstring');\r\n\r\nclass CreateNewGamePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: \"\",\r\n            title: \"\",\r\n            storyIntro: \"\",\r\n            gameCode: \"\",\r\n            gamePublic: false,\r\n            maxLength: \"1\",\r\n            currLength: \"0\"\r\n        }\r\n\r\n        this.createGame = this.createGame.bind(this);\r\n        this.toggleStoryLength = this.toggleStoryLength.bind(this);\r\n    }\r\n\r\n    createGame() {\r\n        let timestamp = new Date(); //Initialize date for timestamp\r\n        let lengthOptions = document.getElementById(\"lengthOptions\"); //select tag for length\r\n        let splitStr = \"\"; //String to determine splitting of string\r\n        let maxLength = \"\" //String to pass along max length of selected length\r\n        //Check that intro is compliant with selected length\r\n        switch(lengthOptions.options[lengthOptions.selectedIndex].text.trim()) {\r\n            case 'One Word':\r\n                if (this.state.storyIntro.trim().split(\" \").length !== 1) {return this.setState({...this.state, error: \"Story introduction does not match set max length.\"})}\r\n                splitStr = \" \"; //Split by space\r\n                maxLength = \"1\" //1 word limit\r\n            case 'One Sentence':\r\n                if (this.state.storyIntro.trim().length > 150) {return this.setState({...this.state, error: \"Story introduction does not match set max length. (Max: 150 characters)\"})}\r\n                splitStr = \".\"; //Split by sentence\r\n                maxLength = \"150\" //150 character limit\r\n            case 'One Paragraph':\r\n                if (this.state.storyIntro.trim().split(\" \").length > 120) {return this.setState({...this.state, error: \"Story introduction does not match set max length. (Max: 120 words)\"})}\r\n                splitStr = \"\\n\"; //Split by paragraph\r\n                maxLength = \"120\" //120 word limit\r\n            case 'Tweet Length':\r\n                if (this.state.storyIntro.trim().length > 280) {return this.setState({...this.state, error: \"Story introduction does not match set max length. (Max: 280 words)\"})}\r\n                //No split str, split by padding spaces??\r\n                maxLength = \"280\" //Character limit\r\n        }\r\n\r\n        let contentArr = this.state.storyIntro.split(splitStr); //Split story intro into list based on splitStr\r\n        let contentStr = \"[\" //Begin string concatenation\r\n        for (let i in contentArr) {\r\n            if (i == contentArr.length - 1) {\r\n                contentStr += `'${contentArr[i]}']`\r\n            } else { contentStr += `'${contentArr[i]}', ` }\r\n        }\r\n\r\n        database.ref('games/' + this.state.gameCode).set({\r\n            author: auth.currentUser.uid,\r\n            title: this.state.title,\r\n            content: contentStr,\r\n            dateStarted: `${timestamp.getMonth()}/${timestamp.getDate()}/${timestamp.getFullYear()}`,\r\n            length: maxLength,\r\n            open: true,\r\n            public: this.state.gamePublic,\r\n            gameCode: this.state.gameCode\r\n        }).then(() => {\r\n            //Reset state\r\n            this.setState({\r\n                error: \"\",\r\n                title: \"\",\r\n                storyIntro: \"\",\r\n                gameCode: \"\",\r\n                gamePublic: false,\r\n                maxLength: \"1\",\r\n                currLength: \"0\"});\r\n            //Reset form\r\n            document.getElementById(\"createGameForm\").reset();\r\n        })\r\n        .catch((error) => (this.setState({...this.state, error: error})));\r\n    }\r\n\r\n    //Function to switch character/word counter below intro (triggered when length option selected)\r\n    toggleStoryLength(e) {\r\n        switch (e.target.value) {\r\n            case 'one-word':\r\n                return this.setState({...this.state, maxLength: \"1\", currLength: this.state.storyIntro.trim().split(\" \").length});\r\n            case 'one-sentence':\r\n                return this.setState({...this.state, maxLength: \"150\", currLength: this.state.storyIntro.trim().length});\r\n            case 'one-paragraph':\r\n                return this.setState({...this.state, maxLength: \"120\", currLength: this.state.storyIntro.trim().split(\" \").length});\r\n            case 'tweet-length':\r\n                return this.setState({...this.state, maxLength: \"280\", currLength: this.state.storyIntro.trim().length});\r\n        }\r\n    }\r\n\r\n    //Updates storyIntro length counter\r\n    getCurrLength() { \r\n        let currCountElement = document.getElementById(\"counter\"); //Counter element on page\r\n\r\n        //Update element on page\r\n        if(this.state.maxLength === '1' || this.state.maxLength === '150') { //Count by words\r\n            currCountElement.innerHTML = this.state.storyIntro.trim().split(\" \").length;\r\n        }\r\n        if(this.state.maxLength === '120' || this.state.maxLength === '280') { //Count by characters\r\n            currCountElement = this.state.storyIntro.trim().length;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let generatedCode = randomString.generate({\r\n            length: 12,\r\n            charset: 'alphabetic'\r\n        });\r\n        this.setState({...this.state, gameCode: generatedCode});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"create-game-card\">\r\n                <Form id=\"createGameForm\">\r\n                    {this.state.error && <Alert variant=\"danger\">{this.state.error}</Alert>}\r\n                    <Form.Group id=\"storyTitle\">\r\n                        <Form.Control type=\"text\" placeholder=\"Title your masterpiece...\"\r\n                            onChange={(event) => this.setState({...this.state, title: event.target.value})} required />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"storyIntro\">\r\n                        <Form.Control type=\"text\" placeholder=\"How do you want to start your story?\"\r\n                            onChange={(event) => {\r\n                                //Updates state and calls getCurrLength to update word/character count\r\n                                this.setState({...this.state, storyIntro: event.target.value})\r\n                                this.getCurrLength()}} required />\r\n                    </Form.Group>\r\n                    <div id =\"counter-div\"> Submission Length:  \r\n                        <span id=\"counter\">{`\\t${this.state.currLength}`}</span> / <span id=\"maxCounter\">{this.state.maxLength}</span>\r\n                    </div>\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <Form.Group id=\"radioButtons\">\r\n                            <ToggleButton checked={this.state.gamePublic} type=\"checkbox\" className=\"createGameOption\"\r\n                                onClick={() => this.setState({...this.state, gamePublic: !this.state.gamePublic})}>\r\n                                Public\r\n                            </ToggleButton>\r\n                            <Form.Label>Max Contribution Length: </Form.Label>\r\n                            <select id=\"lengthOptions\" className=\"createGameOption\">\r\n                                <option value=\"one-word\" onClick={this.toggleStoryLength} selected>One Word</option> <br />\r\n                                <option value=\"one-sentence\" onClick={this.toggleStoryLength}>\r\n                                        One Sentence</option> <br />\r\n                                <option value=\"one-paragraph\" onClick={this.toggleStoryLength}>One Paragraph</option> <br />\r\n                                <option value=\"tweet-length\" onClick={this.toggleStoryLength}>Tweet Length</option> <br />\r\n                            </select>\r\n\r\n                            <Form.Label className=\"createGameOption\">Game Code: <span>{this.state.gameCode}</span></Form.Label>\r\n                        </Form.Group>\r\n                        <Button className=\"bubble-button submit-button\" variant=\"secondary\" onClick={this.createGame}>\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateNewGamePage;\r\n\r\n","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\HomePage\\HomeNav.js",["113","114","115","116"],"import React from 'react';\r\n\r\nclass HomeNav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <nav>\r\n            <a className=\"nav-link\" href=\"#\">About</a>\r\n            <a className=\"nav-link\" href=\"#\">FAQ</a>\r\n            <a className=\"nav-link\" href=\"#\">Developers</a>\r\n        </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeNav;","C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\GameCard\\GameCard.js",["117","118","119","120","121"],"C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\AuthPages\\ForgotPass.js",[],"C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\AuthPages\\Settings.js",[],"C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\AddToStoryPage\\AddToStoryPage.js",[],"C:\\Users\\J\\Documents\\GitHub\\Storybuilding\\storybuilding\\src\\components\\AuthPages\\Signout.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":8,"column":25,"nodeType":"128","messageId":"129","endLine":8,"endColumn":36},{"ruleId":"126","severity":1,"message":"130","line":8,"column":38,"nodeType":"128","messageId":"129","endLine":8,"endColumn":46},{"ruleId":"126","severity":1,"message":"131","line":8,"column":48,"nodeType":"128","messageId":"129","endLine":8,"endColumn":62},{"ruleId":"126","severity":1,"message":"132","line":8,"column":64,"nodeType":"128","messageId":"129","endLine":8,"endColumn":76},{"ruleId":"126","severity":1,"message":"133","line":8,"column":78,"nodeType":"128","messageId":"129","endLine":8,"endColumn":90},{"ruleId":"126","severity":1,"message":"134","line":1,"column":16,"nodeType":"128","messageId":"129","endLine":1,"endColumn":22},{"ruleId":"126","severity":1,"message":"135","line":1,"column":24,"nodeType":"128","messageId":"129","endLine":1,"endColumn":32},{"ruleId":"126","severity":1,"message":"136","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":14},{"ruleId":"126","severity":1,"message":"137","line":3,"column":16,"nodeType":"128","messageId":"129","endLine":3,"endColumn":26},{"ruleId":"126","severity":1,"message":"138","line":4,"column":20,"nodeType":"128","messageId":"129","endLine":4,"endColumn":28},{"ruleId":"126","severity":1,"message":"136","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":14},{"ruleId":"126","severity":1,"message":"139","line":3,"column":16,"nodeType":"128","messageId":"129","endLine":3,"endColumn":24},{"ruleId":"126","severity":1,"message":"137","line":3,"column":26,"nodeType":"128","messageId":"129","endLine":3,"endColumn":36},{"ruleId":"126","severity":1,"message":"139","line":2,"column":9,"nodeType":"128","messageId":"129","endLine":2,"endColumn":17},{"ruleId":"126","severity":1,"message":"136","line":2,"column":19,"nodeType":"128","messageId":"129","endLine":2,"endColumn":23},{"ruleId":"126","severity":1,"message":"140","line":3,"column":19,"nodeType":"128","messageId":"129","endLine":3,"endColumn":23},{"ruleId":"126","severity":1,"message":"141","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":23},{"ruleId":"126","severity":1,"message":"141","line":9,"column":8,"nodeType":"128","messageId":"129","endLine":9,"endColumn":23},{"ruleId":"126","severity":1,"message":"142","line":13,"column":17,"nodeType":"128","messageId":"129","endLine":13,"endColumn":23},{"ruleId":"143","severity":1,"message":"144","line":37,"column":9,"nodeType":"145","messageId":"146","endLine":62,"endColumn":10},{"ruleId":"147","severity":1,"message":"148","line":52,"column":44,"nodeType":"149","messageId":"150","endLine":52,"endColumn":46},{"ruleId":"126","severity":1,"message":"130","line":4,"column":9,"nodeType":"128","messageId":"129","endLine":4,"endColumn":17},{"ruleId":"126","severity":1,"message":"131","line":4,"column":19,"nodeType":"128","messageId":"129","endLine":4,"endColumn":33},{"ruleId":"143","severity":1,"message":"144","line":33,"column":9,"nodeType":"145","messageId":"146","endLine":50,"endColumn":10},{"ruleId":"151","severity":1,"message":"152","line":38,"column":13,"nodeType":"153","messageId":"154","endLine":41,"endColumn":34},{"ruleId":"151","severity":1,"message":"152","line":42,"column":13,"nodeType":"153","messageId":"154","endLine":45,"endColumn":34},{"ruleId":"151","severity":1,"message":"152","line":46,"column":13,"nodeType":"153","messageId":"154","endLine":49,"endColumn":34},{"ruleId":"147","severity":1,"message":"148","line":55,"column":19,"nodeType":"149","messageId":"150","endLine":55,"endColumn":21},{"ruleId":"143","severity":1,"message":"144","line":87,"column":9,"nodeType":"145","messageId":"146","endLine":96,"endColumn":10},{"ruleId":"155","severity":1,"message":"156","line":4,"column":5,"nodeType":"157","messageId":"158","endLine":6,"endColumn":6},{"ruleId":"159","severity":1,"message":"160","line":11,"column":13,"nodeType":"161","endLine":11,"endColumn":46},{"ruleId":"159","severity":1,"message":"160","line":12,"column":13,"nodeType":"161","endLine":12,"endColumn":46},{"ruleId":"159","severity":1,"message":"160","line":13,"column":13,"nodeType":"161","endLine":13,"endColumn":46},{"ruleId":"126","severity":1,"message":"162","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":51,"column":19,"nodeType":"149","messageId":"150","endLine":51,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":55,"column":26,"nodeType":"149","messageId":"150","endLine":55,"endColumn":28},{"ruleId":"163","severity":1,"message":"164","line":130,"column":21,"nodeType":"161","endLine":133,"endColumn":74},{"ruleId":"163","severity":1,"message":"164","line":170,"column":21,"nodeType":"161","endLine":171,"endColumn":47},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'ButtonGroup' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'database' is defined but never used.","'Redirect' is defined but never used.","'auth' is defined but never used.","'PublicStoryCard' is defined but never used.","'Button' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'TimelineBlip' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]